ARRAY:
    | '{'LBRACE ARRAYCONTAIN '}'RBRACE

ARRAYCONTAIN:
    | ε
    | ':'COLON INNERTYPE ':'COLON INTEGER
    | EXPR (','COMMA EXPR)*

ASSIGNMENT:
    | MODULENAME '='EQUAL EXPRCHECK

ASSIGNMENTORCALL:
    | '='EQUAL EXPRCHECK
    | '('LPAR PARAMLIST ')'RPAR 

COMPOUND:
    | STATEMENT+

EXPORTCHECK:
    | ε
    | EXPORT

EXPR:
    | TERM (('+'PLUS | '-'MINUS) TERM)*

EXPRCHECK:
    | EXPR
    | ARRAY
    | STRING

FACTOR:
    | INTEGER 
    | FLOAT
    | TRUE 
    | FALSE
    | '+'PLUS FACTOR 
    | '-'MINUS FACTOR 
    | IDHEAD
    | '('LPAR EXPR ')'RPAR

FORSTATEMENT:
    | FOR '('LPAR COMPOUND ';'SEMI EXPR ';'SEMI COMPOUND ')'RPAR DO COMPOUND DONE

FUNCTIONBODY:
    | ε
    | '{'LBRACE COMPOUND '}'RBRACE

FUNCTIONCALL:
    | MODULENAME '('LPAR PARAMLIST ')'RPAR 

FUNCTIONDECL:
    | EXPORTCHECK FUNCTION ID '('LPAR PARAM ')'RPAR FUNCTIONTYPE FUNCTIONBODY

FUNCTIONTYPE:
    | ε
    | '->'TO INNERTYPE

IDHEAD:
    | MODULENAME ASSIGNMENTORCALL

IFLINK:
    | ELIF '['LSQB EXPR ']'RSQB THEN COMPOUND IFLINK
    | ELSE COMPOUND IFLINK
    | FI

IFSTATEMENT:
    | IF '['LSQB EXPR ']'RSQB THEN COMPOUND IFLINK

INNERTYPE:
    | ID
    | REAL
    | VEC '['LSQB INNERTYPE ';'SEMI INTEGER ']'RSQB

MODULEDEF:
    | MODULE MODULENAME

MODULEIMPORT:
    | IMPORT MODULENAME

MODULENAME:
    | ID (':'COLON ':'COLON ID)*

OBJECTDEF:
    | OBJ ID '{'LBRACE PARAM '}'RBRACE

PARAM:
    | ε
    | VARIABLE (','COMMA VARIABLE)* 

PARAMLIST:
    | ε
    | EXPRCHECK (','COMMA EXPRCHECK)* 

RETURNEXPR:
    | RETURN RETURNEXPRCHECK

RETURNEXPRCHECK:
    | ε
    | EXPRCHECK

STATEMENT:
    | ε
    | FUNCTIONDECL
    | IDHEAD
    | RETURNEXPR
    | IFSTATEMENT
    | FORSTATEMENT
    | WHILESTATEMENT
    | OBJECTDEF
    | MODULEDEF
    | MODULEIMPORT

TERM:
    | FACTOR (('*'STAR | '/'SLASH) FACTOR)*

TYPE:
    | ε
    | ':'COLON INNERTYPE

VARIABLE:
    | ID TYPE

WHILESTATEMENT:
    | WHILE EXPR DO COMPOUND DONE
